////////////////////////////////////////////////////////////////////////
/// \class GUIEvent
///
/// \brief   An event generated by a gui object
///
/// \author  Phil Jones <p.g.jones@qmul.ac.uk>
///
/// REVISION HISTORY:\n
///     29/06/11 : P.Jones - First Revision, new file. \n
///     19/02/12 : P.Jones - Second Revision, renamed. \n
///
/// \detail  Contains the GUI object ID (unique to a frame ONLY) and the 
///          gui global ID (if required). Also a marker to allow NULL 
///          events to be passed.
///
////////////////////////////////////////////////////////////////////////

#ifndef __Viewer_GUIEvent__
#define __Viewer_GUIEvent__

namespace Viewer
{
class GUIEvent
{
public:
  GUIEvent() : fguiID( -1 ), fGlobalID( -1 ), fNULL( true ) { }
  inline GUIEvent( unsigned int guiID, unsigned int globalID );

  inline bool IsNULL() const;

  unsigned int fguiID;
  unsigned int fGlobalID;
  bool fNULL;
};

GUIEvent::GUIEvent( unsigned int guiID, unsigned int globalID )
  : fguiID( guiID ), fGlobalID( globalID ), fNULL( false )
{
  
}

bool
GUIEvent::IsNULL() const
{
  return fNULL;
}

} // ::Viewer

#endif
